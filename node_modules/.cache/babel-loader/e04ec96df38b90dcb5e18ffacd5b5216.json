{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tshady/webApp/acazia-training/todos/src/components/EditableInput/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nfunction EditableInput({\n  label = \"Do the dishes\"\n}) {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [done, setDone] = useState(false);\n\n  const inputForm = /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n\n  const labelFiled = /*#__PURE__*/_jsxDEV(\"p\", {\n    onClick: handleMarkAsDone,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 22\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editableInput\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editableInput-container\",\n      children: [isEditing ? inputForm : labelFiled, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editableInput-edit\",\n        onClick: () => {\n          setIsEditing(!isEditing);\n          console.log(isEditing);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editableInput-delete\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-trash-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditableInput, \"QrSS/f8ZtH9gyK4BBpXJrC6+Lo4=\");\n\n_c = EditableInput;\nexport default EditableInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableInput\");","map":{"version":3,"sources":["/home/tshady/webApp/acazia-training/todos/src/components/EditableInput/index.js"],"names":["React","useState","useEffect","EditableInput","label","isEditing","setIsEditing","done","setDone","inputForm","labelFiled","handleMarkAsDone","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;;AACA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAvB,EAAoD;AAAA;;AAClD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMQ,SAAS,gBACb;AAAA,2BACE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAKA,QAAMC,UAAU,gBAAG;AAAG,IAAA,OAAO,EAAEC,gBAAZ;AAAA,cAA+BP;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAnB;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,iBACGC,SAAS,GAAGI,SAAH,GAAeC,UAD3B,eAEE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbJ,UAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACD,SALH;AAAA,+BAOE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5BQF,a;;KAAAA,a;AA8BT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nfunction EditableInput({ label = \"Do the dishes\" }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [done, setDone] = useState(false);\n  const inputForm = (\n    <form>\n      <input type=\"text\" />\n    </form>\n  );\n  const labelFiled = <p onClick={handleMarkAsDone}>{label}</p>;\n  return (\n    <div className=\"editableInput\">\n      <div className=\"editableInput-container\">\n        {isEditing ? inputForm : labelFiled}\n        <div\n          className=\"editableInput-edit\"\n          onClick={() => {\n            setIsEditing(!isEditing);\n            console.log(isEditing);\n          }}\n        >\n          <i className=\"fas fa-edit\"></i>\n        </div>\n        <div className=\"editableInput-delete\">\n          <i className=\"fas fa-trash-alt\"></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EditableInput;\n"]},"metadata":{},"sourceType":"module"}